type Query {
  "The full list of locations presented by the Interplanetary Space Tourism department"
  locations: [Location!]!
  "The details of a specific location"
  location(id: ID!): Location
}

interface Stats {
  "The average temperature"
  averageTemperature: Int!
  "The gravity"
  gravity: Float!
  "The length of day"
  lengthOfDay: Int!
  "The minimum age for participation on this attraction"
  minimumAge: Int
}

type LocationStats implements Stats {
 "The average temperature"
 averageTemperature: Int!
 "The gravity"
 gravity: Float!
 "The length of day"
 lengthOfDay: Int!
 "The minimum age for participation on this attraction"
  minimumAge: Int
}


enum Terrain {
  TERRESTRIAL
  AERIAL
  AQUATIC
  GALACTIC
  MAGMATIC
}

interface Attraction {
  id: ID!
  "The name of the attraction"
  name: String!
  "A short description about the attraction"
  description: String!
  "The attraction's main photo as a URL"
  photo: String!
  "The terrain for an attraction"
  terrain: Terrain!
}

type ActivityStats @key(fields: "id locationId") {
  id: ID!
  "The activity's location ID"
  locationId: ID!
  "The length of day"
  lengthOfDay: Int!
}

type Location implements Attraction @key(fields: "id"){
  id: ID!
  "The name of the location"
  name: String!
  "A short description about the location"
  description: String!
  "The location's main photo as a URL"
  photo: String!
  "The terrain for an attraction"
  terrain: Terrain!
  "The locationâ€™s stats"
  stats: LocationStats!
}